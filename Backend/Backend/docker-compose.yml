version: '3'
services:
  app:
    container_name: full_app
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=mypass
      - DB_NAME=movie_db
      - DB_HOST=localhost
      - DB_PORT=5434
    build: .
    ports: 
      - 8080:8080 
    restart: on-failure
    # volumes:
    #   - api:/usr/src/app/
    # depends_on:
    #   - fullstack-postgres
    # depends_on:
    #   #CHANGE 2: it prevents issuing a request while the server is starting to depend on the healthy status of postgres-db 
    #  fullstack-postgres:
    #   condition: service_healthy      
    # networks:
    #   - fullstack


  # fullstack-postgres:
  #   image: postgres:latest
  #   container_name: movie_db_postgres
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=mypass
  #     - POSTGRES_DB=movie_db
  #     - DATABASE_HOST=localhost
  #   ports:
  #     - '5432:5434'
  #   volumes:
  #     - database_postgres:/var/lib/postgresql/data
  #   networks:
  #     - fullstack
    # healthcheck:
    #   #CHANGE 1: this command checks if the database is ready, right on the source db server
    #   test: [ "CMD-SHELL", "pg_isready" ]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
    
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin_container
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: vismayavg@gmail.com
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   depends_on:
  #     - fullstack-postgres
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - fullstack
  #   restart: unless-stopped

# volumes:
#   api:
#   database_postgres:                  

# Networks to be created to facilitate communication between containers
# networks:
#   fullstack:
#     driver: bridge
